import numpy as np
from typing import Dict

def calculate_efficiency(
    mpp_results: Dict[str, float],
    incident_power_mw_per_cm2: float
) -> float:
    """
    Calculates the Power Conversion Efficiency (PCE) of a solar cell.

    Efficiency is the ratio of the maximum electrical power generated by the
    cell (Pmax) to the total optical power incident upon it (Pin).

    Efficiency = P_max / P_in

    Args:
        mpp_results: A dictionary from the find_mpp function containing the
                     maximum power density ('p_mpp').
        incident_power_mw_per_cm2: The incident optical power density in mW/cm^2.

    Returns:
        The power conversion efficiency as a percentage (e.g., 15.5 for 15.5%).
        Returns 0.0 if the calculation cannot be performed.
    """
    # Extract the maximum power density (Pmax) from the MPP results
    p_mpp_mWcm2 = mpp_results.get('p_mpp', 0.0)

    # To prevent division by zero, incident power must be a positive number.
    if incident_power_mw_per_cm2 <= 1e-9: # Use a small threshold instead of zero
        return 0.0

    # Calculate efficiency as a ratio
    efficiency_ratio = p_mpp_mWcm2 / incident_power_mw_per_cm2
    
    # Sanity check to ensure the result is physically plausible.
    # A negative efficiency is not possible for a solar cell.
    if not np.isfinite(efficiency_ratio) or efficiency_ratio < 0:
        return 0.0
        
    # Return the result as a percentage
    return float(efficiency_ratio * 100.0)